snowsql -a "vm22589.eu-central-1" -u "JONTUITE"

------Setup User/Role --------
USE ROLE ACCOUNTADMIN;

CREATE SECURITY INTEGRATION SNOWSERVICES_INGRESS_OAUTH
    TYPE=oauth
    OAUTH_CLIENT=snowservices_ingress
    ENABLED=true;

CREATE ROLE WEAVIATE_ROLE;

USE ROLE ACCOUNTADMIN;

CREATE USER weaviate_user PASSWORD='weaviate123' DEFAULT_ROLE = WEAVIATE_ROLE DEFAULT_SECONDARY_ROLES = ('ALL') MUST_CHANGE_PASSWORD = FALSE;

GRANT ROLE WEAVIATE_ROLE TO USER weaviate_user;

ALTER USER weaviate_user SET DEFAULT_ROLE = WEAVIATE_ROLE;

------Database--------
USE ROLE SYSADMIN;

CREATE OR REPLACE WAREHOUSE WEAVIATE_WAREHOUSE WITH
  WAREHOUSE_SIZE='X-SMALL'
  AUTO_SUSPEND = 180
  AUTO_RESUME = true
  INITIALLY_SUSPENDED=false;

CREATE DATABASE IF NOT EXISTS WEAVIATE_DB_001;

USE DATABASE WEAVIATE_DB_001;

CREATE IMAGE REPOSITORY WEAVIATE_DB_001.PUBLIC.WEAVIATE_REPO;
------Compute Pools------

USE ROLE SYSADMIN;

CREATE COMPUTE POOL IF NOT EXISTS JUPYTER_CP
MIN_NODES = 1
MAX_NODES = 1
INSTANCE_FAMILY = STANDARD_2
AUTO_RESUME = true;

CREATE COMPUTE POOL IF NOT EXISTS WEAVIATE_COMPUTE_POOL
  MIN_NODES = 1
  MAX_NODES = 1
  INSTANCE_FAMILY = STANDARD_2
  AUTO_RESUME = true;

CREATE COMPUTE POOL IF NOT EXISTS TEXT2VEC_POOL
  MIN_NODES = 1
  MAX_NODES = 1
  INSTANCE_FAMILY = STANDARD_2
  AUTO_RESUME = true;


-------------Setup Files----------
USE DATABASE WEAVIATE_DB_001;

CREATE OR REPLACE STAGE YAML_STAGE;

CREATE OR REPLACE STAGE DATA ENCRYPTION = (TYPE = 'SNOWFLAKE_SSE');

CREATE OR REPLACE STAGE FILES ENCRYPTION = (TYPE = 'SNOWFLAKE_SSE');


PUT file:///Users/jonathantuite/spec-j.yaml @yaml_stage;
PUT file:///Users/jonathantuite/spec-t2vec.yaml @yaml_stage;
PUT file:///Users/jonathantuite/t2vec.yaml @yaml_stage;

----------Dockerfiles-----------


(see attached files)


------------Create Docker Images----------
docker build --rm --platform linux/amd64 -t weaviate -f weaviate.Dockerfile .
docker tag weaviate arvxsoz-wb10752.registry.snowflakecomputing.com/weaviate_db_001/public/weaviate_repo/weaviate
docker push arvxsoz-wb10752.registry.snowflakecomputing.com/weaviate_db_001/public/weaviate_repo/weaviate


docker build --rm --platform linux/amd64 -t jupyter -f jupyter.Dockerfile . 
docker tag jupyter arvxsoz-wb10752.registry.snowflakecomputing.com/weaviate_db_001/public/weaviate_repo/jupyter
docker push arvxsoz-wb10752.registry.snowflakecomputing.com/weaviate_db_001/public/weaviate_repo/jupyter


docker build --rm --platform linux/amd64 -t text2vec -f text2vec.Dockerfile .
docker tag text2vec arvxsoz-wb10752.registry.snowflakecomputing.com/weaviate_db_001/public/weaviate_repo/text2vec
docker push arvxsoz-wb10752.registry.snowflakecomputing.com/weaviate_db_001/public/weaviate_repo/text2vec



---------Create services --------------


CREATE SERVICE WEAVIATE                                    
MIN_INSTANCES = 1                         
MAX_INSTANCES = 1                                                 
COMPUTE_POOL = WEAVIATE_COMPUTE_POOL
SPEC = @yaml_stage/spec-t2vec.yaml;

CREATE SERVICE jupyter
  MIN_INSTANCES = 1
  MAX_INSTANCES = 1
  COMPUTE_POOL = JUPYTER_CP
  SPEC = @yaml_stage/spec-j.yaml;


CREATE SERVICE text2vec
  MIN_INSTANCES = 1
  MAX_INSTANCES = 1
  COMPUTE_POOL = TEXT2VEC_POOL
  SPEC = @yaml_stage/t2vec.yaml;


GRANT USAGE ON SERVICE JUPYTER TO ROLE WEAVIATE_ROLE;
GRANT USAGE ON SERVICE WEAVIATE TO ROLE WEAVIATE_ROLE;
GRANT USAGE ON SERVICE TEXT2VEC TO ROLE WEAVIATE_ROLE;
GRANT USAGE on warehouse WEAVIATE_WAREHOUSE to role WEAVIATE_ROLE;

SHOW SERVICES;

CALL SYSTEM$GET_SERVICE_LOGS('weaviate_db_001.PUBLIC.jupyter', '0', 'jupyter');
CALL SYSTEM$GET_SERVICE_STATUS('WEAVIATE_DB_001.PUBLIC.WEAVIATE', 100);
CALL SYSTEM$GET_SERVICE_STATUS('WEAVIATE_DB_001.PUBLIC.TEXT2VEC', 100);

--token ---
b9c7375885cc706975649a644de986d3bd186259f3254468

--------------TEST--------------
import weaviate
import json
import os
print("testing...")
client = weaviate.Client(
   url = "http://weaviate:8080",  
 )
print("success!")

if client.schema.exists("Question"):
    client.schema.delete_class("Question")
class_obj = {
    "class": "Question",
    "vectorizer": "text2vec-transformers"
}

client.schema.create_class(class_obj)


%%writefile SampleJSON.json 
[{"Category":"SCIENCE","Question":"This organ removes excess glucose from the blood & stores it as glycogen","Answer":"Liver"},{"Category":"ANIMALS","Question":"It's the only living mammal in the order Proboseidea","Answer":"Elephant"},{"Category":"ANIMALS","Question":"The gavial looks very much like a crocodile except for this bodily feature","Answer":"the nose or snout"},{"Category":"ANIMALS","Question":"Weighing around a ton, the eland is the largest species of this animal in Africa","Answer":"Antelope"},{"Category":"ANIMALS","Question":"Heaviest of all poisonous snakes is this North American rattlesnake","Answer":"the diamondback rattler"},{"Category":"SCIENCE","Question":"2000 news: the Gunnison sage grouse isn't just another northern sage grouse, but a new one of this classification","Answer":"species"},{"Category":"SCIENCE","Question":"A metal that is ductile can be pulled into this while cold & under pressure","Answer":"wire"},{"Category":"SCIENCE","Question":"In 1953 Watson & Crick built a model of the molecular structure of this, the gene-carrying substance","Answer":"DNA"},{"Category":"SCIENCE","Question":"Changes in the tropospheric layer of this are what gives us weather","Answer":"the atmosphere"},{"Category":"SCIENCE","Question":"In 70-degree air, a plane traveling at about 1,130 feet per second breaks it","Answer":"Sound barrier"}]


# Load data from the stage
filename="SampleJSON.json"
 
with open(filename) as ifile:
    system = "".join([x for x in ifile])

# Configure a batch process
with client.batch(
    batch_size=100
) as batch:
    # Batch import all Questions
    for i, d in enumerate(json.loads(system)):
        print(f"importing question: {i+1}")

        properties = {
            "answer": d["Answer"],
            "question": d["Question"],
            "category": d["Category"],
        }

        client.batch.add_data_object(
            properties,
            "Question",
        )

client.data_object.get(with_vector=True)


------------Suspend--------------
alter service weaviate suspend;
alter service TEXT2VEC suspend;
alter service jupyter suspend;   

----------Resume----------------
alter service weaviate resume;
alter service TEXT2VEC resume;
alter service jupyter resume;                                                    


-----------Cleanup---------------
USE ROLE ACCOUNTADMIN;

DROP SERVICE WEAVIATE;
DROP SERVICE JUPYTER;
DROP SERVICE TEXT2VEC;

DROP STAGE DATA;

DROP STAGE FILES;

DROP IMAGE REPOSITORY WEAVIATE_DB_001.PUBLIC.WEAVIATE_REPO;

DROP DATABASE WEAVIATE_DB_001;

DROP WAREHOUSE WEAVIATE_WAREHOUSE;

DROP COMPUTE POOL WEAVIATE_COMPUTE_POOL;
DROP COMPUTE POOL JUPYTER_CP;
DROP COMPUTE POOL TEXT2VEC_POOL;

DROP USER weaviate_user;

DROP ROLE WEAVIATE_ROLE;

DROP SECURITY INTEGRATION SNOWSERVICES_INGRESS_OAUTH;
